on:
  release:
    types:
      - created

name: Release PDFs

jobs:
  md_compile:
    name: Markdown Compile
    runs-on: ubuntu-latest

    strategy:
      matrix:
        doc: ["epcisMessageSpecification", "attributeCompletenessCheck", "architecture-DLT-recommendations"]
    
    steps:
    - uses: actions/checkout@v2
    - name: Setup Node.js environment
      uses: actions/setup-node@v1.4.2

    - name: PDF Compilation
      run: npm install -g markdown-pdf && markdown-pdf -f A4 -m '{"html":true, "breaks":false}' ${{ matrix.doc }}.md


    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ matrix.doc }}.pdf
        asset_name: ${{ matrix.doc }}.pdf
        asset_content_type: application/pdf

  adoc_compile:
    name: compile and upload adocs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        doc: ["block4log-data-visibility", "zero-knowledge-notarization"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: PDF Compilation
        uses: docker://asciidoctor/docker-asciidoctor:latest
        with:
          entrypoint: asciidoctor-pdf
          args: -a icons=font -a source-highlighter=coderay ${{ matrix.doc }}.adoc

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.doc }}.pdf
          asset_name: ${{ matrix.doc }}.pdf
          asset_content_type: application/pdf

